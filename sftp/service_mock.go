// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_sftp is a generated GoMock package.
package sftp

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetFilesInPath mocks base method
func (m *MockService) GetFilesInPath(path string) ([]File, error) {
	ret := m.ctrl.Call(m, "GetFilesInPath", path)
	ret0, _ := ret[0].([]File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilesInPath indicates an expected call of GetFilesInPath
func (mr *MockServiceMockRecorder) GetFilesInPath(path interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilesInPath", reflect.TypeOf((*MockService)(nil).GetFilesInPath), path)
}

// RetrieveFile mocks base method
func (m *MockService) RetrieveFile(path, file string) {
	m.ctrl.Call(m, "RetrieveFile", path, file)
}

// RetrieveFile indicates an expected call of RetrieveFile
func (mr *MockServiceMockRecorder) RetrieveFile(path, file interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveFile", reflect.TypeOf((*MockService)(nil).RetrieveFile), path, file)
}
